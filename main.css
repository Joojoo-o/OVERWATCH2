/* css는 class와 id를 통하여 이름을 지어준 것들을 불러와 해당 이름에 해당하는 html의 소스들을 꾸며준다.

이때 class와 id 명은 복붙하여 오거나 html을 분할 화면하여 같이 띄워놓은 후 어떤 걸 입력할지 정확히 보면서 해야한다.

css를 수정할때에는 go live의 페이지에서 F12를 누른 후 마우스커서로 해당 위치의 이름을 알아내어 수정한다.

css를 작성할 때에는 상위요소부터 하위요소를 순서대로 작성하여야 한다.
이때 하위요소는 띄어쓰기로 나누어준다.
예) .container (띄어쓰기).heroes */

body {
  height: 100vh;
  /* vh : 뷰포트의 높이 */
  background-image: url(https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/bg.jpg);
  background-size: cover;
  /* cover: 더 넓은 영역에 맞게 이미지가 출력되어 나온다 */
  background-repeat: no-repeat;
  background-attachment: fixed;
  /* 백그라운드 고정 */
}

.container {
  padding: 50px 0;
}

.container .heroes {
  display: flex;
  /* div로 인해 블럭처리 되어있던 hero칸들을
  flex를 통해 인라인으로 바꾸어준다.
  (칸이 한줄에 하나씩 정렬되에 있던 것이 flex로 인해 칸들이 세로로 붙어서 정렬됨) */
  flex-wrap: wrap;
  /* ❓❓❓무엇을 묶어주는 것인지? 묶음처리로 인해 생기는 효과? 왜 묶음 처리를 안하면 기존에 입력했던 가로 세로 값이 변한상태로 나타나는지?
  묶음처리 
  */
  justify-content: center;
  /* 수평 정렬 : 센터 */
  max-width: 700px;
  /* 최대 넓이는 700px이지만
  700px이하로 화면이 축소되면 자동으로 그에 맞게 줄어든다. */
  margin: 0 auto;
  /* 요소(.heroes)가 블록요소여야하며,
   가로값이 있는 상태에서
   마진이 auto면 가운데 정렬이 된다.
   이때 auto값은 좌우에만 적용이 되므로, 위아래의 값을 기본값인 0으로 입력해준다.(margin: 0 마진없음) */
  padding: 40px 20px;
  /* ❓❓❓내부여백이 어떤 여백을 뜻하는 건지? 왜 외부도 늘어나는지?
   padding=내부여백
   상하 40px
   좌우 20px 
   이때 상하와 좌우는 띄어쓰기로 구분하여 준다. */
}

.container .heroes .hero {
  width: 80px;
  height: 84px;
  margin: 4px;
  /* 이때 margin-위치를 입력하지 않으면 상하좌우 모두 4px의 여백을 주게 된다. */
  border: 3px solid #fff;
  /* 테두리선 : 3px의 크기의 솔리드 선, 화이트 색상을 만든다. */
  border-radius: 10px;
  /* 선의 테두리-둥글게 : 10px만든다. */
  box-sizing: border-box;
  /* 박스사이즈를 고정시켜준다.
     (테두리가 들어간만큼 더욱 두꺼워지지 않고 사이즈를 고정해준다.)
     box size는 border-box의 사이즈를 고정시킨다. */
  background-color: #555;
  overflow: hidden;
  /* 넘치는 영역: 숨기기; */
  transform: skewX(-14deg);
  /* transform = 변환 효과
     skewX = 기울기
     deg = 각도 */
  transition: transform 0.1s, background-color 0.6s;
  /* 애니메이션 효과
    움직임을 0.1초의 시간동안 바뀌게 한다. 
    0.1초에서 0은 생략가능하다. 
    이때 .1s 앞에 transform은 hover에서 입력한 에니메이션 값을 말하며 거게에 적용된 것들만 .1초 동안 움직이게 된다.
    그리고 ,(컴마)로 배경색은 .6초 동안 바꾸게 설정하였다.*/
}
.container .heroes .hero:hover {
  /* hover라는 가상 클래스선택자를 붙이기 */
  background-color: #ff9c00;
  transform: scale(1.3) skewX(-14deg);
  z-index: 1;
  /* 쌓인 순서
  ❓❓❓ */
}
.container .heroes .hero .image {
  width: 140%;
  height: 100%;
  background-position: center;
  background-repeat: no-repeat;
  /* 배경반복: 반복하지 않는다; */
  background-size: 90px;
  transform: skewX(14deg) translateX(-16px);
  /* ❓❓❓
   왜 width값을 100%로 하고 transform의 translateX(-16px)값을 없애는 방식으로 작업하지 않았을까???
   width값만 100%로 줘도 동일하게 적용되는데...!
   그리고 width 140%로 하면 이미지가 늘어나는 게아니라 %만큼 이동을 하는 것인가???? %만큼 이동하는게 무슨 의미인가???? */
}
.container .heroes .hero:nth-child(1) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero1.png');
}
.container .heroes .hero:nth-child(2) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero2.png');
}
.container .heroes .hero:nth-child(3) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero3.png');
}
.container .heroes .hero:nth-child(4) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero4.png');
}
.container .heroes .hero:nth-child(5) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero5.png');
}
.container .heroes .hero:nth-child(6) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero6.png');
}
.container .heroes .hero:nth-child(7) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero7.png');
}
.container .heroes .hero:nth-child(8) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero8.png');
}
.container .heroes .hero:nth-child(9) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero9.png');
}
.container .heroes .hero:nth-child(10) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero10.png');
}

.container .heroes .hero:nth-child(11) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero11.png');
}
.container .heroes .hero:nth-child(12) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero12.png');
}
.container .heroes .hero:nth-child(13) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero13.png');
}
.container .heroes .hero:nth-child(14) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero14.png');
}
.container .heroes .hero:nth-child(15) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero15.png');
}
.container .heroes .hero:nth-child(16) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero16.png');
}
.container .heroes .hero:nth-child(17) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero17.png');
}
.container .heroes .hero:nth-child(18) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero18.png');
}
.container .heroes .hero:nth-child(19) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero19.png');
}
.container .heroes .hero:nth-child(20) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero20.png');
}

.container .heroes .hero:nth-child(21) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero21.png');
}
.container .heroes .hero:nth-child(22) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero22.png');
}
.container .heroes .hero:nth-child(23) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero23.png');
}
.container .heroes .hero:nth-child(24) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero24.png');
}
.container .heroes .hero:nth-child(25) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero25.png');
}
.container .heroes .hero:nth-child(26) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero26.png');
}
.container .heroes .hero:nth-child(27) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero27.png');
}
.container .heroes .hero:nth-child(28) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero28.png');
}
.container .heroes .hero:nth-child(29) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero29.png');
}
.container .heroes .hero:nth-child(30) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero30.png');
}

.container .heroes .hero:nth-child(31) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero31.png');
}
.container .heroes .hero:nth-child(32) .image {
  background-image: url('https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images/hero32.png');
}

.container .logo {
  max-width: 300px;
  margin: 0 auto;
  padding: 0 20px;
}

.container .logo img {
  width: 100%;
}
